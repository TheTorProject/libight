#!/usr/bin/env python

""" Usage: bundle-ca libressl-version ca-bundle-path output-header-path """

import sys

def main():
    """ Main function """
    curl_version = sys.argv[1].encode("ascii")
    ca_bundle_path = sys.argv[2]
    output_header_path = sys.argv[3]
    with open(ca_bundle_path, "rb") as filep:
        ca_bundle_data = filep.read()
    with open(output_header_path, "wb") as filep:
        filep.write(b"""\
// Warning! Autogenerated file; do not edit!
//
// Returns the CA file shipped with cURL. This could then be passed to libressl
// specific functions for loading CAs from a memory buffer.
//
// Based on curl cacert-%s
//
// Generated by './build/bundle-ca'

#include "src/libmeasurement_kit/net/builtin_ca_bundle.hpp"

namespace mk {
namespace net {

std::vector<uint8_t> builtin_ca_bundle() {
    // Disabled on Windows because MSVC cannot compile this vector
    // and fails with internal error. Not a big deal since on Windows
    // we do not actually need to embed a CA file.
    static std::vector<uint8_t> cav{
#ifndef _MSC_VER
""" % curl_version)
        for number in ca_bundle_data:
            if sys.version_info.major == 2:
                number = ord(number)
            filep.write(b"%d," % number)
        filep.write(b"""
#endif // _MSC_VER
    };
    return cav;
}

} // namespace net
} // namespace mk
""")

if __name__ == "__main__":
    main()
