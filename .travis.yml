language: cpp

matrix:
  include:
    # CMake builds
    # ------------
    #
    # We will eventually use CMake only.

    # Build using flags that would be used by Debian
    - env: BUILD_TYPE="gcc_release_build"
           CFLAGS="-fstack-protector-strong -Wformat -Werror=format-security"
           CMAKE_OPTIONS="-D CMAKE_BUILD_TYPE=Release"
           CPPFLAGS="-Wdate-time -D_FORTIFY_SOURCE=2"
           CXXFLAGS="-fstack-protector-strong -Wformat -Werror=format-security"
      script:
        - ./.ci/docker/setup ubuntu:artful cmake
      services:
        - docker
      sudo: required

    # See https://github.com/google/sanitizers/wiki/AddressSanitizer
    - env: BUILD_TYPE="asan"
           CFLAGS="-fsanitize=address -O1 -fno-omit-frame-pointer"
           CXXFLAGS="-fsanitize=address -O1 -fno-omit-frame-pointer"
           LDFLAGS="-fsanitize=address -fno-omit-frame-pointer"
           CMAKE_OPTIONS="-D CMAKE_BUILD_TYPE=Debug"
      script:
        - ./.ci/docker/setup ubuntu:artful cmake
      services:
        - docker
      sudo: required

    # See https://github.com/google/sanitizers/wiki/ThreadSanitizerCppManual
    - env: BUILD_TYPE="tsan"
           CFLAGS="-fsanitize=thread -O2"
           CXXFLAGS="-fsanitize=thread -O2"
           LDFLAGS="-fsanitize=thread"
           CMAKE_OPTIONS="-D CMAKE_BUILD_TYPE=Debug"
      script:
        - ./.ci/docker/setup ubuntu:artful cmake
      services:
        - docker
      sudo: required

    # See https://github.com/google/sanitizers/wiki/AddressSanitizerLeakSanitizer
    - env: BUILD_TYPE="lsan"
           CFLAGS="-fsanitize=leak"
           CXXFLAGS="-fsanitize=leak"
           LDFLAGS="-fsanitize=leak"
           CMAKE_OPTIONS="-D CMAKE_BUILD_TYPE=Debug"
      script:
        - ./.ci/docker/setup ubuntu:artful cmake
      services:
        - docker
      sudo: required

    # "I was told on IRC -fsanitize=undefined enables all those sub-options."
    # See https://stackoverflow.com/a/20738666
    - env: BUILD_TYPE="ubsan"
           CFLAGS="-fsanitize=undefined -fno-sanitize-recover"
           CXXFLAGS="-fsanitize=undefined -fno-sanitize-recover"
           LDFLAGS="-fsanitize=undefined"
           CMAKE_OPTIONS="-D CMAKE_BUILD_TYPE=Debug"
      script:
        - ./.ci/docker/setup ubuntu:artful cmake
      services:
        - docker
      sudo: required

    # Autotools builds
    # ----------------
    #
    # We need to keep at least one build using autotools to make sure
    # building with autotools is not broken. The blocker to migrate from
    # autotools to CMake build is that currently we're not able to
    # compile for Msys, Android, and iOS using CMake.
    #
    # Another blocker is that updating the clang build to our custom
    # Debian Docker image did not work immediately out of the box, so
    # we have deferred a bit converting up clang to CMake.

    - sudo: required
      env: DOCKER_SPEC=clang pkg_make_flags="V=0 -j3"
           CXXFLAGS="-Werror" CFLAGS="-Werror"
      services:
        - docker
      script:
        - ./build/ci/travis

    - sudo: required
      env: DOCKER_SPEC=coveralls pkg_make_flags="V=0 -j3"
           CXXFLAGS="-Werror" CFLAGS="-Werror"
      services:
        - docker
      script:
        - ./build/ci/travis
