language: cpp

#branches:
#  except:
#    - /^doc\/.*$/

install:
    - if [ "$VER" != ""  ]; then
          export CXX="$CXX-$VER" CC="$CC-$VER";
      fi;
    - if [ "$COVERAGE" = "--enable-coverage" ]; then
        pip install --user cpp-coveralls;
      fi
    - ./autogen.sh

script:
    - export pkg_make_flags="V=0 -j2"
    - export pkg_configure_flags="--quiet --disable-static"
    - export LD_RUN_PATH=$TRAVIS_BUILD_DIR/builtin
    - ./build/dependency geoip
    - ./build/dependency libressl
    - ./build/dependency libevent
    - ./configure $pkg_configure_flags --with-geoip=builtin
        --with-openssl=builtin --with-libevent=builtin $COVERAGE
    - make $pkg_make_flags
    - make $pkg_make_flags check LOG_DRIVER=$TRAVIS_BUILD_DIR/build/valgrind/test-driver
    - echo make $pkg_make_flags check-am

# Silence gcov standard output since it produces way too much output
after_success:
    - if [ "$COVERAGE" = "--enable-coverage" ]; then
        coveralls --gcov /usr/bin/gcov-5 --exclude src/libmeasurement_kit/ext
                  -b .  --exclude example --exclude third_party
                  --exclude include/measurement_kit/ext
                  --exclude src/libmeasurement_kit/cmdline > /dev/null;
      fi

after_failure:
    - if [ -f "test-suite.log" ]; then
        cat test-suite.log;
      fi

matrix:
  include:

    - sudo: false
      compiler: g++-5
      env: COVERAGE=--enable-coverage VER=5
      addons:
        apt:
          packages:
            - g++-5
            - gcc-5
          sources:
            - ubuntu-toolchain-r-test

    - sudo: false
      compiler: g++-5
      env: VER=5
      addons:
        apt:
          packages:
            - g++-5
            - gcc-5
            - valgrind
          sources:
            - ubuntu-toolchain-r-test
